AWSTemplateFormatVersion: 2010-09-09
Description: Lambda event handler

Parameters:
  CodepipelineService1:
    Type: String
  CodepipelineService2:
    Type: String
  MonoRepoName:
    Type: String
    Default: mono_research
  LambdaZipS3Bucket:
    Default: 'lambda-codecommit-monorepo-build-trigger'
    Type: String
  LambdaZipS3Key:
    Default: 'lambda.zip'
    Type: String

Resources:

  # Lambda trigger       
  CodeCommitEventHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref 'LambdaZipS3Bucket'
        S3Key: !Ref 'LambdaZipS3Key'
      Description: |
        Lambda function that will recieve CodeCommit events and will trigger
        CodeBuild docker image build job.
      FunctionName: CodeCommit-Event-Handler
      DeadLetterConfig:
        TargetArn: !GetAtt CodeCommitEventHandlerDeadLetterQueue.Arn
      Handler: handler.main
      Runtime: python3.8
      MemorySize: 512
      Timeout: 60
      Role: !GetAtt LambdaTriggerRole.Arn

  LambdaTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Lambda-CodeBuild-Trigger-Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Path: /
      Policies:
        - PolicyName: Lambda-CodeBuild-Trigger-Policy
          PolicyDocument:
            Statement:
              - Action: sqs:SendMessage
                Effect: Allow
                Resource:
                  - !GetAtt CodeCommitEventHandlerDeadLetterQueue.Arn
              - Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*'
                Sid: LogAccessPolicy
              - Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/MonoRepoTrigger/*'
              - Action: codecommit:GitPull
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${MonoRepoName}'
              - Action:
                  - codecommit:EvaluatePullRequestApprovalRules
                  - codecommit:Get*
                  - codecommit:Describe*
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${MonoRepoName}'
                Sid: CodeCommitRead
              - Action:
                  - codepipeline:GetPipeline
                  - codepipeline:ListPipelines
                  - codepipeline:StartPipelineExecution
                  - codepipeline:StopPipelineExecution
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodepipelineService1}'
                  - !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodepipelineService2}'
                Sid: CodePipelineStartPolicy

  
  PermissionForCodeCommitToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref 'CodeCommitEventHandler'
      Principal: codecommit.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:aws:codecommit:'
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - Ref: MonoRepoName

  CodeCommitEventHandlerDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete